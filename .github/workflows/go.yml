name: Go

on:
  push:
    branches: [ master, jmeter]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        cd src/facet.ninja/api && go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: build
      run: cd src/facet.ninja/api && make

    - name: Setup SSH Keys and known_hosts
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${{ secrets.SSH_KEY }}"

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.13.5

    - name: Deploy Test Endpoint
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      if: github.ref == 'refs/heads/master'
      run: cd deploy && terraform init && terraform apply -auto-approve

    - name: Run JMeter on Test Endpoint
      uses: rbhadti94/apache-jmeter-action@v0.2.0
      with:
        testFilePath: test/jmeter.jmx
        outputReportsFolder: test/results/

    - name: Upload test results
      uses: jakejarvis/s3-sync-action@v0.5.0
      env:
        AWS_S3_BUCKET: cdn.facet.ninja
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'test/results'
        DEST_DIR: test/api/regression/$GITHUB_RUN_NUMBER/

    - name: Upload test results
      uses: jakejarvis/s3-sync-action@v0.5.0
      with:
        args: --delete
      env:
        AWS_S3_BUCKET: cdn.facet.ninja
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'
        SOURCE_DIR: 'test/results'
        DEST_DIR: test/api/regression/latest/

    - name: Verify Regression Test Results
      run: |
        test $(jq .Total.errorCount test/results/statistics.json) -eq 0

    - name: Deploy Live Endpoint
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        if: github.ref == 'refs/heads/master'
        run: cd deploy && terraform init && terraform apply -auto-approve -var deploy_live_stage=true
